{"version":3,"sources":["components/form-user/form-user.component.jsx","actions/action.js","pages/homepage/homepage.component.jsx","icons/friends.svg","pages/friends-view/friends-view.component.jsx","components/header/header.component.jsx","App.js","reducers/contactsReducer.js","reducers/index.js","index.js"],"names":["FormBlock","useForm","defaultValues","profilePicture","lastName","firstName","phone","address","addressSup","city","zip","register","handleSubmit","reset","formState","errors","dispatch","useDispatch","React","useState","submittedData","useEffect","isSubmitSuccessful","Form","id","onSubmit","data","type","payload","Math","random","store","addNotification","title","message","insert","container","animationIn","animationOut","dismiss","duration","Group","controlId","Label","Control","placeholder","pattern","className","Row","as","Col","required","maxLength","Button","variant","Homepage","FriendsView","contacts","useSelector","state","deleteHandler","setContact","filter","el","length","map","contact","Card","style","width","Img","src","Body","Title","Text","onClick","friends","alt","Header","Navbar","bg","Brand","href","to","path","App","initState","contactsReducer","action","allReducers","combineReducers","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mXA4HeA,EAjHG,WAAO,IAAD,EAMhBC,YAAQ,CAAEC,cACN,CACIC,eAAgB,GAChBC,SAAW,GACXC,UAAY,GACZC,MAAO,GACPC,QAAS,GACTC,WAAY,GACZC,KAAM,GACNC,IAAK,MAdTC,EADY,EACZA,SACJC,EAFgB,EAEhBA,aACAC,EAHgB,EAGhBA,MACAC,EAJgB,EAIhBA,UACaC,EALG,EAKhBD,UAAaC,OAaXC,EAAWC,cAlBG,EAkCsBC,IAAMC,SAAS,IAlCrC,mBAkCbC,EAlCa,UAyCpB,OANAF,IAAMG,WAAU,WACRP,EAAUQ,oBACVT,EAAM,eAAKO,MAEhB,CAACN,EAAWM,EAAeP,IAG1B,eAACU,EAAA,EAAD,CAAMC,GAAG,YAAYC,SAAUb,GAvBlB,SAAAc,GACbV,EC/BgC,CACpCW,KAAM,cACNC,QD6BwBF,EC5BxBF,GAAIK,KAAKC,WD6BLC,QAAMC,gBAAgB,CAClBC,MAAO,UACPC,QAAS,0CACTP,KAAM,UACNQ,OAAQ,SACRC,UAAW,gBACXC,YAAa,CAAC,qCACdC,aAAc,CAAC,sCACfC,QAAS,CACLC,SAAU,UAYlB,UACI,eAACjB,EAAA,EAAKkB,MAAN,CAAYC,UAAU,yBAAtB,UACI,cAACnB,EAAA,EAAKoB,MAAN,8BACA,cAACpB,EAAA,EAAKqB,QAAN,aAAcjB,KAAK,OAAOkB,YAAY,cACpBlC,EAAS,iBACT,CAACmC,QAAS,6HAC3B/B,EAAOZ,gBAAiD,YAA/BY,EAAOZ,eAAewB,MAAqB,uBAAOoB,UAAU,+BAAjB,yCAGzE,eAACxB,EAAA,EAAKyB,IAAN,WACI,eAACzB,EAAA,EAAKkB,MAAN,CAAYQ,GAAIC,IAAKR,UAAU,mBAA/B,UACI,cAACnB,EAAA,EAAKoB,MAAN,yBACA,cAACpB,EAAA,EAAKqB,QAAN,aAAcjB,KAAK,OAAOkB,YAAY,uBACpBlC,EAAS,WAAY,CAACwC,UAAU,EAAML,QAAS,mBAChE/B,EAAOX,UAAqC,aAAzBW,EAAOX,SAASuB,MAAuB,uBAAOoB,UAAU,+BAAjB,4BAC1DhC,EAAOX,UAAqC,YAAzBW,EAAOX,SAASuB,MAAsB,uBAAOoB,UAAU,+BAAjB,qCAG9D,eAACxB,EAAA,EAAKkB,MAAN,CAAYQ,GAAIC,IAAKR,UAAU,oBAA/B,UACI,cAACnB,EAAA,EAAKoB,MAAN,0BACA,cAACpB,EAAA,EAAKqB,QAAN,aAAcjB,KAAK,OAAOkB,YAAY,wBACpBlC,EAAS,YAAa,CAACwC,UAAU,EAAML,QAAS,mBACjE/B,EAAOV,WAAuC,aAA1BU,EAAOV,UAAUsB,MAAuB,uBAAOoB,UAAU,+BAAjB,4BAC5DhC,EAAOV,WAAuC,YAA1BU,EAAOV,UAAUsB,MAAsB,uBAAOoB,UAAU,+BAAjB,wCAIpE,eAACxB,EAAA,EAAKkB,MAAN,CAAYC,UAAU,gBAAtB,UACI,cAACnB,EAAA,EAAKoB,MAAN,sBACA,cAACpB,EAAA,EAAKqB,QAAN,aAAcjB,KAAK,MAAMkB,YAAY,cACnBlC,EAAS,QAAS,CAACwC,UAAU,EAAML,QAAS,iCAAkCM,UAAW,OAC3G,uEAAiD,uBAChDrC,EAAOT,OAA+B,aAAtBS,EAAOT,MAAMqB,MAAuB,uBAAOoB,UAAU,+BAAjB,0CACpDhC,EAAOT,OAA+B,YAAtBS,EAAOT,MAAMqB,MAAsB,uBAAOoB,UAAU,+BAAjB,kCACnDhC,EAAOT,OAA+B,cAAtBS,EAAOT,MAAMqB,MAAwB,uBAAOoB,UAAU,+BAAjB,uCAG1D,eAACxB,EAAA,EAAKkB,MAAN,CAAYC,UAAU,mBAAtB,UACI,cAACnB,EAAA,EAAKoB,MAAN,sBACA,cAACpB,EAAA,EAAKqB,QAAN,aAAcjB,KAAK,OAAOkB,YAAY,gBACpBlC,EAAS,gBAG/B,eAACY,EAAA,EAAKkB,MAAN,CAAYC,UAAU,mBAAtB,UACI,cAACnB,EAAA,EAAKoB,MAAN,iCACA,cAACpB,EAAA,EAAKqB,QAAN,aAAcjB,KAAK,OAAOkB,YAAY,+BACpBlC,EAAS,mBAG/B,eAACY,EAAA,EAAKyB,IAAN,WACI,eAACzB,EAAA,EAAKkB,MAAN,CAAYQ,GAAIC,IAAKR,UAAU,eAA/B,UACI,cAACnB,EAAA,EAAKoB,MAAN,mBACA,cAACpB,EAAA,EAAKqB,QAAN,aAAcjB,KAAK,OAAOkB,YAAY,aACpBlC,EAAS,aAG/B,eAACY,EAAA,EAAKkB,MAAN,CAAYQ,GAAIC,IAAKR,UAAU,cAA/B,UACI,cAACnB,EAAA,EAAKoB,MAAN,kBACA,cAACpB,EAAA,EAAKqB,QAAN,aAAcjB,KAAK,OAAOkB,YAAY,YACpBlC,EAAS,MAAO,CAACmC,QAAS,iBAC3C/B,EAAOL,KAA2B,YAApBK,EAAOL,IAAIiB,MAAsB,uBAAOoB,UAAU,+BAAjB,sCAIxD,cAACM,EAAA,EAAD,CAAQC,QAAQ,UAAU3B,KAAK,SAA/B,wBEzGG4B,EARE,WACb,OACI,qBAAK/B,GAAG,WAAWuB,UAAU,6BAA7B,SACI,cAAC,EAAD,O,QCPG,G,MAAA,IAA0B,qCCiD1BS,EA1CK,WAChB,IAAMC,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASA,YAC/CzC,EAAWC,cAEX2C,EAAgB,SAAClC,GACnBV,EHNkB,SAACyC,GAAD,MAAe,CACrC9B,KAAM,cACNC,QAAS6B,GGIII,CACLJ,EAASK,QAAQ,SAAAC,GAAE,OAAIA,EAAGvC,KAAOE,EAAKF,SAI9C,OAAGiC,EAASO,OAAS,EAEb,qBAAKxC,GAAG,cAAcuB,UAAU,6BAAhC,SACKU,EAASQ,KAAI,SAAAC,GACV,OACI,eAACC,EAAA,EAAD,CAAuBC,MAAO,CAACC,MAAO,SAAtC,UACI,cAACF,EAAA,EAAKG,IAAN,CAAUhB,QAAQ,MACRiB,IAAKL,EAAQ/D,eAAiB+D,EAAQ/D,eAAiB,wEACjE,eAACgE,EAAA,EAAKK,KAAN,WACI,cAACL,EAAA,EAAKM,MAAN,UAAY,+BAAKP,EAAQ7D,UAAb,IAAyB6D,EAAQ9D,cAC7C,eAAC+D,EAAA,EAAKO,KAAN,WACI,8BAAG,4CAAH,IAA4BR,EAAQ5D,SACpC,8BAAG,8CAAH,IAA8B4D,EAAQ3D,WACtC,8BAAG,mDAAH,IAAmC2D,EAAQ1D,cAC3C,8BAAG,2CAAH,IAA2B0D,EAAQzD,QACnC,8BAAG,0CAAH,IAA0ByD,EAAQxD,UAEtC,cAAC2C,EAAA,EAAD,CAAQsB,QAASf,EAAeN,QAAQ,SAAxC,yBAZGY,EAAQ1C,SAqBnC,sBAAKuB,UAAU,yCAAf,UACI,6DACA,qBAAKvB,GAAG,cAAc+C,IAAKK,EAASC,IAAI,gBCVrCC,EAxBA,WACX,OACI,cAAC,IAAD,UACA,qCACI,eAACC,EAAA,EAAD,CAAQC,GAAG,OAAO1B,QAAQ,OAA1B,UACI,cAACyB,EAAA,EAAOE,MAAR,CAAcC,KAAK,QAAnB,oBACA,sBAAKnC,UAAU,qBAAf,UACI,cAAC,IAAD,CAAMoC,GAAG,IAAIpC,UAAU,WAAvB,kBACA,cAAC,IAAD,CAAMoC,GAAG,gBAAgBpC,UAAU,WAAnC,gCAGR,eAAC,IAAD,WACI,cAAC,IAAD,CAAOqC,KAAK,gBAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACI,cAAC,EAAD,eCbLC,MATf,WACI,OACI,qCACI,cAAC,IAAD,IACA,cAAC,EAAD,Q,eCTNC,EAAY,CACd7B,SAAU,IAgBC8B,EAbS,WAAgC,IAA/B5B,EAA8B,uDAAtB2B,EAAWE,EAAW,uCACnD,OAAQA,EAAO7D,MACX,IAAK,cACD,OAAO,2BAAIgC,GAAX,IAAkBF,SAAS,GAAD,mBAAME,EAAMF,UAAZ,CAAsB+B,EAAO5D,YAE3D,IAAK,cACD,OAAO,2BAAI+B,GAAX,IAAkBF,SAAU+B,EAAO5D,UAEvC,QACI,OAAO+B,ICNJ8B,EAJKC,YAAgB,CAChCjC,SAAU8B,ICIRxD,EAAQ4D,YACVF,EACAG,OAAOC,8BAAgCD,OAAOC,gCAGlDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUjE,MAAOA,EAAjB,SACC,cAAC,EAAD,QAGHkE,SAASC,eAAe,W","file":"static/js/main.9d53bd64.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Form, Col, Button} from 'react-bootstrap';\r\nimport { useForm } from \"react-hook-form\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addContact} from \"../../actions/action\";\r\nimport { store } from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport 'animate.css/animate.min.css';\r\n\r\n\r\n\r\nconst FormBlock = () => {\r\n    const { register,\r\n        handleSubmit,\r\n        reset,\r\n        formState,\r\n        formState: { errors }\r\n    } = useForm({ defaultValues:\r\n            {\r\n                profilePicture: \"\",\r\n                lastName : \"\",\r\n                firstName : \"\",\r\n                phone: \"\",\r\n                address: \"\",\r\n                addressSup: \"\",\r\n                city: \"\",\r\n                zip: \"\",\r\n            }\r\n    });\r\n    const dispatch = useDispatch();\r\n    const onSubmit = data => {\r\n        dispatch(addContact(data))\r\n        store.addNotification({\r\n            title: 'Friends',\r\n            message: 'Your friend has been successfully added',\r\n            type: 'success',                         // 'default', 'success', 'info', 'warning'\r\n            insert: 'bottom',\r\n            container: 'bottom-center',                // where to position the notifications\r\n            animationIn: ['animate__animated animate__fadeIn'],     // animate.css classes that's applied\r\n            animationOut: ['animate__animated animate__fadeOut'],   // animate.css classes that's applied\r\n            dismiss: {\r\n                duration: 3000\r\n            }\r\n        })\r\n    };\r\n    const [submittedData, setSubmittedData] = React.useState({});\r\n    React.useEffect(() => {\r\n        if (formState.isSubmitSuccessful) {\r\n            reset({ ...submittedData });\r\n        }\r\n    }, [formState, submittedData, reset]);\r\n\r\n    return (\r\n        <Form id=\"formBlock\" onSubmit={handleSubmit(onSubmit)}>\r\n            <Form.Group controlId=\"formGridProfilePicture\">\r\n                <Form.Label>Profile picture</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"http://...\"\r\n                              {...register(\"profilePicture\",\r\n                                  {pattern: /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([-.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/g })}/>\r\n                {errors.profilePicture && errors.profilePicture.type === 'pattern' &&<small className=\"text-danger font-weight-bold\">http or https url needed</small>}\r\n            </Form.Group>\r\n\r\n            <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formGridLastName\">\r\n                    <Form.Label>Lastname *</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter your lastname\"\r\n                                  {...register(\"lastName\", {required: true, pattern: /^[A-Za-z]+$/i})}/>\r\n                    {errors.lastName && errors.lastName.type === 'required' && <small className=\"text-danger font-weight-bold\">Field required</small>}\r\n                    {errors.lastName && errors.lastName.type === 'pattern' && <small className=\"text-danger font-weight-bold\">Only letters allowed</small>}\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n                    <Form.Label>Firstname *</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter your firstname\"\r\n                                  {...register(\"firstName\", {required: true, pattern: /^[A-Za-z]+$/i })}/>\r\n                    {errors.firstName && errors.firstName.type === 'required' && <small className=\"text-danger font-weight-bold\">Field required</small>}\r\n                    {errors.firstName && errors.firstName.type === 'pattern' && <small className=\"text-danger font-weight-bold\">Only letters allowed</small>}\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group controlId=\"formGridPhone\">\r\n                <Form.Label>Phone *</Form.Label>\r\n                <Form.Control type=\"tel\" placeholder=\"Your phone\"\r\n                              {...register(\"phone\", {required: true, pattern: /^(0|\\+33)[1-9]( *[0-9]{2}){4}$/, maxLength: 12 })}/>\r\n                <small>Format: 0XXXXXXXXX or +33XXXXXXXXX</small><br></br>\r\n                {errors.phone && errors.phone.type === 'required' && <small className=\"text-danger font-weight-bold\">phone must be write properly</small>}\r\n                {errors.phone && errors.phone.type === 'pattern' && <small className=\"text-danger font-weight-bold\">only numbers allowed</small>}\r\n                {errors.phone && errors.phone.type === 'maxLength' && <small className=\"text-danger font-weight-bold\">phone numbers too long</small>}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGridAddress1\">\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Your address\"\r\n                              {...register(\"address\")}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGridAddress2\">\r\n                <Form.Label>Address supplement</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Apartment, studio, floor...\"\r\n                              {...register(\"addressSup\")}/>\r\n            </Form.Group>\r\n\r\n            <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formGridCity\">\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Your city\"\r\n                                  {...register(\"city\")}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"formGridZip\">\r\n                    <Form.Label>Zip</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Your zip\"\r\n                                  {...register(\"zip\", {pattern: /^[0-9]{5}$/ })}/>\r\n                    {errors.zip && errors.zip.type === 'pattern' && <small className=\"text-danger font-weight-bold\">5 numbers required</small>}\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default FormBlock;\r\n","export const addContact = (contact) => ({\r\n    type: 'ADD_CONTACT',\r\n    payload: contact,\r\n    id: Math.random(),\r\n});\r\n\r\nexport const setContact = (contacts) => ({\r\n    type: 'SET_CONTACT',\r\n    payload: contacts,\r\n});\r\n","import React from 'react';\r\nimport './homepage.css'\r\nimport FormBlock from '../../components/form-user/form-user.component';\r\n\r\nconst Homepage = () => {\r\n    return (\r\n        <div id=\"homepage\" className=\"container rounded p-3 mt-4\">\r\n            <FormBlock />\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Homepage;\r\n","export default __webpack_public_path__ + \"static/media/friends.d6b696d9.svg\";","import React from 'react';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {Card, Button} from 'react-bootstrap';\r\nimport './friends-view.style.css';\r\nimport friends from '../../icons/friends.svg'\r\nimport {setContact} from \"../../actions/action\";\r\n\r\nconst FriendsView = () => {\r\n    const contacts = useSelector(state => state.contacts.contacts)\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteHandler = (data) => {\r\n        dispatch(setContact(\r\n            contacts.filter( el => el.id !== data.id )\r\n        ))\r\n    }\r\n\r\n    if(contacts.length > 0) {\r\n        return (\r\n            <div id=\"friendsView\" className=\"container rounded p-3 mt-4\">\r\n                {contacts.map(contact => {\r\n                    return (\r\n                        <Card key={contact.id} style={{width: '18rem'}}>\r\n                            <Card.Img variant=\"top\"\r\n                                      src={contact.profilePicture ? contact.profilePicture : \"https://via.placeholder.com/250/343a40/FFFFFF/?text=Profile+picture\"}/>\r\n                            <Card.Body>\r\n                                <Card.Title><h3>{contact.firstName} {contact.lastName}</h3></Card.Title>\r\n                                <Card.Text>\r\n                                    <p><strong>Phone:</strong> {contact.phone}</p>\r\n                                    <p><strong>Address:</strong> {contact.address}</p>\r\n                                    <p><strong>Address supp:</strong> {contact.addressSup}</p>\r\n                                    <p><strong>City:</strong> {contact.city}</p>\r\n                                    <p><strong>Zip:</strong> {contact.zip}</p>\r\n                                </Card.Text>\r\n                                <Button onClick={deleteHandler} variant=\"danger\">Delete</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    )\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"container text-center rounded p-3 mt-4\">\r\n            <h1>No friends added for now :)</h1>\r\n            <img id=\"friends_img\" src={friends} alt=\"friends\"/>\r\n        </div>\r\n    )\r\n}\r\nexport default FriendsView;\r\n","import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Homepage from \"../../pages/homepage/homepage.component\";\r\nimport FriendsView from \"../../pages/friends-view/friends-view.component\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <Router>\r\n        <>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\r\n                <div className=\"mr-auto navbar-nav\">\r\n                    <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                    <Link to=\"/friends-view\" className=\"nav-link\">Your friends</Link>\r\n                </div>\r\n            </Navbar>\r\n            <Switch>\r\n                <Route path=\"/friends-view\">\r\n                    <FriendsView/>\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <Homepage/>\r\n                </Route>\r\n            </Switch>\r\n        </>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactNotifications from 'react-notifications-component';\nimport Header from './components/header/header.component'\n\n\nfunction App() {\n    return (\n        <>\n            <ReactNotifications/>\n            <Header/>\n        </>\n    )\n}\n\nexport default App;\n","const initState = {\r\n    contacts: []\r\n}\r\n\r\nconst contactsReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_CONTACT' : {\r\n            return {...state, contacts: [...state.contacts, action.payload]}\r\n        }\r\n        case 'SET_CONTACT': {\r\n            return {...state, contacts: action.payload}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default contactsReducer;\r\n","import contactsReducer from \"./contactsReducer\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst allReducers = combineReducers({\r\n    contacts: contactsReducer,\r\n})\r\n\r\nexport default allReducers;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from \"redux\";\nimport allReducers from \"./reducers\";\nimport {Provider} from \"react-redux\";\n\nconst store = createStore(\n    allReducers,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n     <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}